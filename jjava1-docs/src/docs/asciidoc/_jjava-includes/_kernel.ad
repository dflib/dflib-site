[#kernel]
== Kernel

All code running in JJava flows through the kernel. This makes it the
place to register magics, add things to the classpath, and perform many
jupyter related operations.

=== Notebook functions

JJava injects static methods for getting the active kernel instance and additional helpers for making use of the kernel
at runtime. To get a reference to the current kernel, do this:

[source,java,indent=0]
----
include::../../../test/java/org/dflib/jjava/docs/KernelTest.java[tags=doKernel]
----
<1> The `kernel()` function is a static import provided by default in each notebook.

The kernel object has lots of goodies, like adding jars to the classpath, registering new magics, access to the code
evaluator, etc.

The `eval(..)` function provides full access to the code evaluation mechanism of the kernel:
[source,java,indent=0]
----
include::../../../test/java/org/dflib/jjava/docs/KernelTest.java[tags=doEval]
----
NOTE: When you write code in a notebook cell, `eval(..)` is called implicitly, and you don't need to worry about it.
